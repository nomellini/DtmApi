// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDatamaceApi.Models;

namespace WebDatamaceApi.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    partial class CoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebDatamaceApi.Models.AdmAcoes", b =>
                {
                    b.Property<Guid>("GuidAcao")
                        .HasColumnName("guidAcao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<Guid>("GuidArea")
                        .HasColumnName("guidArea")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuidAcao");

                    b.ToTable("admAcoes");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.AdmArea", b =>
                {
                    b.Property<Guid>("GuidArea")
                        .HasColumnName("guidArea")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.HasKey("GuidArea");

                    b.ToTable("admArea");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.AdmUsuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idUsuario")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<string>("Customize")
                        .HasColumnName("customize")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127)
                        .IsUnicode(false);

                    b.Property<string>("Senha")
                        .HasColumnType("char(40)")
                        .IsFixedLength(true)
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<bool>("SuperUsers")
                        .HasColumnType("bit");

                    b.HasKey("IdUsuario");

                    b.ToTable("admUsuario");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.AdmUsuariosAreas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("GuidAcao")
                        .HasColumnName("guidAcao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GuidArea")
                        .HasColumnName("guidArea")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("admUsuariosAreas");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.AdonisSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Batch")
                        .HasColumnName("batch")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MigrationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("migration_time")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("adonis_schema");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Avise", b =>
                {
                    b.Property<int>("IdAvise")
                        .HasColumnName("id_avise")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnName("cidade")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cnpj")
                        .HasColumnName("cnpj")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cpf")
                        .HasColumnName("cpf")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ddd")
                        .HasColumnName("ddd")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("DddEmpresa")
                        .HasColumnName("ddd_empresa")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Funcao")
                        .HasColumnName("funcao")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("IdCurso")
                        .HasColumnName("id_curso")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RazaoSocial")
                        .HasColumnName("razao_social")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RecebeNews")
                        .HasColumnName("recebe_news")
                        .HasColumnType("int");

                    b.Property<string>("TelEmpresa")
                        .HasColumnName("tel_empresa")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Telefone")
                        .HasColumnName("telefone")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Uf")
                        .HasColumnName("uf")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.HasKey("IdAvise");

                    b.ToTable("avise");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnName("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Uf")
                        .HasColumnName("Uf")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurEmpresas", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idEmpresa")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cliente")
                        .HasColumnType("bit");

                    b.Property<string>("Cnpj")
                        .HasColumnName("CNPJ")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ddd")
                        .HasColumnName("DDD")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("IdEmpresa");

                    b.ToTable("curEmpresas");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurInstrutor", b =>
                {
                    b.Property<int>("IdInstrutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idInstrutor")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Instrutor")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.HasKey("IdInstrutor");

                    b.ToTable("curInstrutor");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurLocal", b =>
                {
                    b.Property<int>("IdLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idLocal")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("EmailRecebe")
                        .HasColumnName("emailRecebe")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.HasKey("IdLocal");

                    b.ToTable("curLocal");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurTreinamento", b =>
                {
                    b.Property<int>("IdTreinamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTreinamento")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargaHoraria")
                        .HasColumnType("varchar(24)")
                        .HasMaxLength(24)
                        .IsUnicode(false);

                    b.Property<string>("Conteudo")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("Modulos")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127)
                        .IsUnicode(false);

                    b.Property<double?>("Preco")
                        .HasColumnType("float");

                    b.Property<bool>("Publicado")
                        .HasColumnType("bit");

                    b.Property<string>("Sinopse")
                        .HasColumnType("varchar(2548)")
                        .HasMaxLength(2548)
                        .IsUnicode(false);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdTreinamento");

                    b.ToTable("curTreinamento");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurTreinamentoCategoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeCategoria")
                        .HasColumnName("nomeCategoria")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("IdCategoria");

                    b.ToTable("curTreinamentoCategoria");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurTreinamentoInteresse", b =>
                {
                    b.Property<int>("IdInteresse")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idInteresse")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Contato")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ddd")
                        .HasColumnName("DDD")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("Empresa")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<string>("Fone")
                        .HasColumnType("varchar(18)")
                        .HasMaxLength(18)
                        .IsUnicode(false);

                    b.Property<int>("IdTreinamento")
                        .HasColumnName("idTreinamento")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<string>("Uf")
                        .HasColumnName("UF")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.HasKey("IdInteresse");

                    b.ToTable("curTreinamentoInteresse");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurTurma", b =>
                {
                    b.Property<int>("IdTurma")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTurma")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aberta")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdGrupo")
                        .HasColumnName("idGrupo")
                        .HasColumnType("int");

                    b.Property<int?>("IdInstrutor")
                        .HasColumnName("idInstrutor")
                        .HasColumnType("int");

                    b.Property<int?>("IdLocal")
                        .HasColumnName("idLocal")
                        .HasColumnType("int");

                    b.Property<int>("IdTreinamento")
                        .HasColumnName("idTreinamento")
                        .HasColumnType("int");

                    b.Property<int>("Modulo")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("Periodo")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<double?>("Preco")
                        .HasColumnType("float");

                    b.Property<bool>("Publicado")
                        .HasColumnType("bit");

                    b.Property<int>("Vagas")
                        .HasColumnType("int");

                    b.HasKey("IdTurma");

                    b.ToTable("curTurma");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurTurmaFase", b =>
                {
                    b.Property<int>("IdTurma")
                        .HasColumnName("idTurma")
                        .HasColumnType("int");

                    b.Property<int>("IdFase")
                        .HasColumnName("idFase")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.HasKey("IdTurma", "IdFase");

                    b.HasIndex("IdFase")
                        .HasName("IX_curTurmaFase");

                    b.ToTable("curTurmaFase");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurTurmaGrupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idGrupo")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeGrupo")
                        .IsRequired()
                        .HasColumnType("varchar(24)")
                        .HasMaxLength(24)
                        .IsUnicode(false);

                    b.HasKey("IdGrupo");

                    b.ToTable("curTurmaGrupo");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurUsuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idUsuario")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Cpf")
                        .HasColumnName("CPF")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ddd")
                        .HasColumnName("DDD")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Ddd1")
                        .HasColumnName("DDD1")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<bool>("DesejaNews")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Funcao")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("IdEmpresa")
                        .HasColumnName("idEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127)
                        .IsUnicode(false);

                    b.Property<string>("Origem")
                        .HasColumnName("origem")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Rg")
                        .HasColumnName("RG")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdUsuario");

                    b.ToTable("curUsuarios");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurUsuariosLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurUsuariosIdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLog")
                        .HasColumnType("datetime2");

                    b.Property<string>("Log")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurUsuariosIdUsuario");

                    b.ToTable("CurUsuariosLog");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurUsuariosTeste", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Cpf")
                        .HasColumnName("CPF")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Ddd")
                        .HasColumnName("DDD")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Ddd1")
                        .HasColumnName("DDD1")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<bool>("DesejaNews")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Funcao")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("IdEmpresa")
                        .HasColumnName("idEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("idUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(127)")
                        .HasMaxLength(127)
                        .IsUnicode(false);

                    b.Property<string>("Origem")
                        .HasColumnName("origem")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Rg")
                        .HasColumnName("RG")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("curUsuarios_teste");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurUsuariosTurmas", b =>
                {
                    b.Property<int>("IdTurma")
                        .HasColumnName("idTurma")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("idUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("Aprovado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Obs")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048)
                        .IsUnicode(false);

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<bool>("Presente")
                        .HasColumnType("bit");

                    b.Property<string>("Resultado")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("IdTurma", "IdUsuario");

                    b.ToTable("curUsuariosTurmas");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Dtproperties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Property")
                        .HasColumnName("property")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<byte[]>("Lvalue")
                        .HasColumnName("lvalue")
                        .HasColumnType("image");

                    b.Property<int?>("Objectid")
                        .HasColumnName("objectid")
                        .HasColumnType("int");

                    b.Property<string>("Uvalue")
                        .HasColumnName("uvalue")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Value")
                        .HasColumnName("value")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Version")
                        .HasColumnName("version")
                        .HasColumnType("int");

                    b.HasKey("Id", "Property");

                    b.ToTable("dtproperties");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoUf")
                        .HasColumnName("CodigoUf")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Regiao")
                        .HasColumnName("Regiao")
                        .HasColumnType("int");

                    b.Property<string>("Uf")
                        .HasColumnName("Uf")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("nome")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("status")
                        .HasColumnName("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("evento");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Images", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnName("path")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("PropertyId")
                        .HasColumnName("property_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("images");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Lembrete", b =>
                {
                    b.Property<int>("IdLembrete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_lembrete")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<int?>("Ordem")
                        .HasColumnName("ordem")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLembrete");

                    b.ToTable("lembrete");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.MailCampanhas", b =>
                {
                    b.Property<int>("CampanhaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CampanhaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Conteudo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataProgramada")
                        .HasColumnType("datetime");

                    b.Property<string>("Grupo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TotalCompras")
                        .HasColumnType("int");

                    b.Property<int?>("TotalEnviado")
                        .HasColumnType("int");

                    b.Property<int?>("TotalErro")
                        .HasColumnType("int");

                    b.Property<int?>("TotalLido")
                        .HasColumnType("int");

                    b.Property<int?>("TotalRetornado")
                        .HasColumnType("int");

                    b.Property<int?>("TotalVisitas")
                        .HasColumnType("int");

                    b.HasKey("CampanhaId");

                    b.ToTable("MailCampanhas");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.MailContas", b =>
                {
                    b.Property<int>("ContaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Dominios")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FromMail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FromName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("LimiteDiario")
                        .HasColumnType("int");

                    b.Property<int?>("PortSmtp")
                        .HasColumnName("portSMTP")
                        .HasColumnType("int");

                    b.Property<string>("SmtpLogin")
                        .HasColumnName("smtpLogin")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SmtpPassword")
                        .HasColumnName("smtpPassword")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SmtpServer")
                        .HasColumnName("smtpServer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("SslSmtp")
                        .HasColumnName("sslSMTP")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ContaId");

                    b.ToTable("MailContas");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.MailControle", b =>
                {
                    b.Property<int>("IdControle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_controle")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo")
                        .HasColumnName("conteudo")
                        .HasColumnType("text");

                    b.Property<string>("Curso")
                        .HasColumnName("curso")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailDestinatario")
                        .HasColumnName("email_destinatario")
                        .HasColumnType("text");

                    b.Property<string>("Enviado")
                        .HasColumnName("enviado")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Produto")
                        .HasColumnName("produto")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Remetente")
                        .HasColumnName("remetente")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Tema")
                        .HasColumnName("tema")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Template")
                        .HasColumnName("template")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("UsuarioRemetente")
                        .HasColumnName("usuario_remetente")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("IdControle");

                    b.ToTable("mail_controle");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.MailEmails", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("Compras")
                        .HasColumnType("int");

                    b.Property<int?>("ContaId")
                        .HasColumnName("ContaID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Erro")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Erros")
                        .HasColumnType("int");

                    b.Property<string>("Grupo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("LastSend")
                        .HasColumnType("int");

                    b.Property<int?>("TotalSend")
                        .HasColumnType("int");

                    b.Property<int?>("Visitas")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.ToTable("MailEmails");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.MailGrupos", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GrupoID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Funcao")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.HasKey("GrupoId");

                    b.ToTable("MailGrupos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.MailHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CampanhaId")
                        .HasColumnName("CampanhaID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MailHistory");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.MailView", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CampanhaId")
                        .HasColumnName("CampanhaID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Template")
                        .HasColumnName("template")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MailView");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.OrdersTeste", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("OrderId");

                    b.ToTable("Orders_teste");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Ordersteste1", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("OrderId");

                    b.ToTable("Ordersteste");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatif8", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("pesq_satif_8");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf10", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent7")
                        .HasColumnName("produto_coment7")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent8")
                        .HasColumnName("produto_coment8")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg7")
                        .HasColumnName("produto_perg7")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg8")
                        .HasColumnName("produto_perg8")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_10");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf11", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent7")
                        .HasColumnName("produto_coment7")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent8")
                        .HasColumnName("produto_coment8")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent9")
                        .HasColumnName("produto_coment9")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg7")
                        .HasColumnName("produto_perg7")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg8")
                        .HasColumnName("produto_perg8")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg9")
                        .HasColumnName("produto_perg9")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_11");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf12", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnName("data")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Data1")
                        .HasColumnName("data1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ip")
                        .HasColumnName("ip")
                        .HasColumnType("nchar(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("Navegador")
                        .HasColumnName("navegador")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent7")
                        .HasColumnName("produto_coment7")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent8")
                        .HasColumnName("produto_coment8")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent9")
                        .HasColumnName("produto_coment9")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg7")
                        .HasColumnName("produto_perg7")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg8")
                        .HasColumnName("produto_perg8")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg9")
                        .HasColumnName("produto_perg9")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_12");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf13", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnName("data")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Data1")
                        .HasColumnName("data1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ip")
                        .HasColumnName("ip")
                        .HasColumnType("nchar(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("Navegador")
                        .HasColumnName("navegador")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent7")
                        .HasColumnName("produto_coment7")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent8")
                        .HasColumnName("produto_coment8")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent9")
                        .HasColumnName("produto_coment9")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg7")
                        .HasColumnName("produto_perg7")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg8")
                        .HasColumnName("produto_perg8")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg9")
                        .HasColumnName("produto_perg9")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_13");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf14", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnName("data")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Data1")
                        .HasColumnName("data1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ip")
                        .HasColumnName("ip")
                        .HasColumnType("nchar(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("Navegador")
                        .HasColumnName("navegador")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent7")
                        .HasColumnName("produto_coment7")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent8")
                        .HasColumnName("produto_coment8")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent9")
                        .HasColumnName("produto_coment9")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg7")
                        .HasColumnName("produto_perg7")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg8")
                        .HasColumnName("produto_perg8")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg9")
                        .HasColumnName("produto_perg9")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_14");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_2");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf3", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_3");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf4", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_4");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf5", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_5");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf6", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_6");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf7", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_7");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf8", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_8");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisf9", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_9");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.PesqSatisfExtra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpresaPerg1")
                        .HasColumnName("empresa_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg2")
                        .HasColumnName("empresa_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpresaPerg3")
                        .HasColumnName("empresa_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("IdCliente")
                        .HasColumnName("id_cliente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdPesq")
                        .HasColumnName("id_pesq")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoComent1")
                        .HasColumnName("produto_coment1")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent2")
                        .HasColumnName("produto_coment2")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent3")
                        .HasColumnName("produto_coment3")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent4")
                        .HasColumnName("produto_coment4")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent5")
                        .HasColumnName("produto_coment5")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoComent6")
                        .HasColumnName("produto_coment6")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg1")
                        .HasColumnName("produto_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg2")
                        .HasColumnName("produto_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg3")
                        .HasColumnName("produto_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg4")
                        .HasColumnName("produto_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg5")
                        .HasColumnName("produto_perg5")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPerg6")
                        .HasColumnName("produto_perg6")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<string>("VocePerg1")
                        .HasColumnName("voce_perg1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg2")
                        .HasColumnName("voce_perg2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg3")
                        .HasColumnName("voce_perg3")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("VocePerg4")
                        .HasColumnName("voce_perg4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("pesq_satisf_extra");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Properties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("address")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("properties");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Sra010", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Matricula")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RaAdmissa")
                        .HasColumnName("RA_ADMISSA")
                        .HasColumnType("datetime");

                    b.Property<string>("RaNome")
                        .HasColumnName("RA_NOME")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SRA010");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbArquivos", b =>
                {
                    b.Property<int>("Arquivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ARQUIVO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria")
                        .HasColumnName("CATEGORIA")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Produto")
                        .HasColumnName("PRODUTO")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("STATUS")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Arquivo");

                    b.HasIndex("Categoria");

                    b.HasIndex("Produto");

                    b.ToTable("TB_ARQUIVOS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbArquivos1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Downloads")
                        .HasColumnType("int");

                    b.Property<int>("IdArquivo")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("NomeFisico")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("Tamanho")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TbArquivos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbCasosSucesso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CasData")
                        .HasColumnName("casData")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CasFonte")
                        .HasColumnName("casFonte")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("CasId")
                        .HasColumnName("casId")
                        .HasColumnType("int");

                    b.Property<string>("CasResumo")
                        .HasColumnName("casResumo")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("CasStatus")
                        .HasColumnName("casStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CasTexto")
                        .HasColumnName("casTexto")
                        .HasColumnType("ntext");

                    b.Property<string>("Castitulo")
                        .HasColumnName("castitulo")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("tbCasosSucesso");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbCategoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("NomePasta")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TipoDescricao")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TipoSigla")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("IdCategoria");

                    b.ToTable("TbCategoria");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbCategorias", b =>
                {
                    b.Property<int>("Categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CATEGORIA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Categoria");

                    b.ToTable("TB_CATEGORIAS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbConhecimentos", b =>
                {
                    b.Property<int>("Conhecimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CONHECIMENTO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arquivo")
                        .IsRequired()
                        .HasColumnName("ARQUIVO")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Comentarios")
                        .HasColumnName("COMENTARIOS")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnName("CONTATO")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Dataenvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATAENVIO")
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Remetente")
                        .IsRequired()
                        .HasColumnName("REMETENTE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("tinyint");

                    b.Property<string>("Telefone")
                        .HasColumnName("TELEFONE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnName("TEMA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Conhecimento");

                    b.ToTable("TB_CONHECIMENTOS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbContatos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CtBairro")
                        .HasColumnName("ctBairro")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CtCep")
                        .HasColumnName("ctCEP")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CtCidade")
                        .HasColumnName("ctCidade")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CtData")
                        .HasColumnName("ctData")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CtDdd")
                        .HasColumnName("ctDDD")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CtEmail")
                        .HasColumnName("ctEmail")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("CtEndereco")
                        .HasColumnName("ctEndereco")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("CtFone")
                        .HasColumnName("ctFone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CtId")
                        .HasColumnName("ctId")
                        .HasColumnType("int");

                    b.Property<string>("CtMsg")
                        .HasColumnName("ctMsg")
                        .HasColumnType("ntext");

                    b.Property<string>("CtNome")
                        .HasColumnName("ctNome")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("CtStatus")
                        .HasColumnName("ctStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CtUf")
                        .HasColumnName("ctUF")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("tbContatos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresaProdutos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EpId")
                        .HasColumnName("epId")
                        .HasColumnType("int");

                    b.Property<int>("EpProId")
                        .HasColumnName("epProId")
                        .HasColumnType("int");

                    b.Property<int?>("ProId")
                        .HasColumnName("proId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbEmpresa_Produtos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresaUsuarios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EuCargo")
                        .HasColumnName("euCargo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EuEmail")
                        .HasColumnName("euEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("EuEpId")
                        .HasColumnName("euEpId")
                        .HasColumnType("int");

                    b.Property<string>("EuFone")
                        .HasColumnName("euFone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("EuId")
                        .HasColumnName("euId")
                        .HasColumnType("int");

                    b.Property<int?>("EuNivel")
                        .HasColumnName("euNivel")
                        .HasColumnType("int");

                    b.Property<string>("EuNome")
                        .HasColumnName("euNome")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EuSenha")
                        .HasColumnName("euSenha")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("EuStatus")
                        .HasColumnName("euStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbEmpresa_Usuarios");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresaUsuariosPastas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdEmpresaUsuarioPasta")
                        .HasColumnType("int");

                    b.Property<int?>("IdPasta")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TbEmpresa_Usuarios_Pastas");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresaUsuariosProdutos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdProdutoUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbEmpresa_Usuarios_Produtos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresas", b =>
                {
                    b.Property<int>("Empresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EMPRESA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ativado")
                        .HasColumnName("ATIVADO")
                        .HasColumnType("bit");

                    b.Property<string>("Cidade")
                        .HasColumnName("CIDADE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Cliente")
                        .HasColumnName("Cliente")
                        .HasColumnType("bit");

                    b.Property<string>("Cnpj")
                        .HasColumnName("CNPJ")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Codigo")
                        .HasColumnName("CODIGO")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATA_CADASTRO")
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ddd")
                        .HasColumnName("DDD")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Fone")
                        .HasColumnName("FONE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Responsavel")
                        .HasColumnName("RESPONSAVEL")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("STATUS")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Uf")
                        .HasColumnName("UF")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Empresa");

                    b.ToTable("TB_EMPRESAS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresas1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EpId")
                        .HasColumnName("epId")
                        .HasColumnType("int");

                    b.Property<string>("EpRazao")
                        .HasColumnName("epRazao")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("EpStatus")
                        .HasColumnName("epStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbEmpresas");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresasPastas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresaPasta")
                        .HasColumnType("int");

                    b.Property<int?>("IdPastaPai")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbEmpresasPastas");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresasPastasArquivos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Downloads")
                        .HasColumnType("int");

                    b.Property<int>("IdClientePastaArquivo")
                        .HasColumnType("int");

                    b.Property<int?>("IdPasta")
                        .HasColumnType("int");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Tamanho")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbEmpresasPastasArquivos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresasProdutos", b =>
                {
                    b.Property<int>("Empresa")
                        .HasColumnName("EMPRESA")
                        .HasColumnType("int");

                    b.Property<int>("Produto")
                        .HasColumnName("PRODUTO")
                        .HasColumnType("int");

                    b.HasKey("Empresa", "Produto");

                    b.HasIndex("Produto");

                    b.ToTable("TB_EMPRESAS_PRODUTOS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresasnova", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cidade")
                        .HasColumnName("CIDADE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cnpj")
                        .HasColumnName("CNPJ")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Codigo")
                        .HasColumnName("CODIGO")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DATA_CADASTRO")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Ddd")
                        .HasColumnName("DDD")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("Empresa")
                        .HasColumnName("EMPRESA")
                        .HasColumnType("int");

                    b.Property<string>("Fone")
                        .HasColumnName("FONE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Responsavel")
                        .HasColumnName("RESPONSAVEL")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("bit");

                    b.Property<string>("Uf")
                        .HasColumnName("UF")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("TB_EMPRESASNova");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEnquete", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnName("comentario")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Enquete")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("IdEnquete")
                        .HasColumnName("idEnquete")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnName("id_tipo")
                        .HasColumnType("int");

                    b.Property<int>("Resp1")
                        .HasColumnName("resp1")
                        .HasColumnType("int");

                    b.Property<int>("Resp2")
                        .HasColumnName("resp2")
                        .HasColumnType("int");

                    b.Property<int>("Resp3")
                        .HasColumnName("resp3")
                        .HasColumnType("int");

                    b.Property<int>("Resp4")
                        .HasColumnName("resp4")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tb_enquete");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEnqueteVotado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("IdPesquisa")
                        .HasColumnName("id_pesquisa")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnName("id_usuario")
                        .HasColumnType("int");

                    b.Property<int?>("Votacao")
                        .HasColumnName("votacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbEnqueteVotado");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbFaqInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("FiFtid")
                        .HasColumnName("fiFTID")
                        .HasColumnType("int");

                    b.Property<int>("FiId")
                        .HasColumnName("fiId")
                        .HasColumnType("int");

                    b.Property<string>("FiPerg")
                        .HasColumnName("fiPerg")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("FiResp")
                        .HasColumnName("fiResp")
                        .HasColumnType("ntext");

                    b.Property<byte?>("FiStatus")
                        .HasColumnName("fiStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("tbFaqInfo");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbFaqTipo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FtId")
                        .HasColumnName("ftId")
                        .HasColumnType("int");

                    b.Property<string>("FtNome")
                        .HasColumnName("ftNome")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("FtSite")
                        .HasColumnName("ftSite")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("FtStatus")
                        .HasColumnName("ftStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("tbFaqTipo");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbGerCliSub", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("ntext");

                    b.Property<int?>("IdPasta")
                        .HasColumnName("idPasta")
                        .HasColumnType("int");

                    b.Property<int>("IdSubPasta")
                        .HasColumnName("idSub_pasta")
                        .HasColumnType("int");

                    b.Property<int?>("Idempresa")
                        .HasColumnName("idempresa")
                        .HasColumnType("int");

                    b.Property<int?>("Idusuario")
                        .HasColumnName("idusuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbGerCliSub");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbGerenciador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("ntext");

                    b.Property<int>("IdGerenciador")
                        .HasColumnName("idGerenciador")
                        .HasColumnType("int");

                    b.Property<int?>("Idproduto")
                        .HasColumnName("idproduto")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbGerenciador");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbGerenciadorCli", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("ntext");

                    b.Property<int>("IdGerenciadorCli")
                        .HasColumnName("idGerenciadorCli")
                        .HasColumnType("int");

                    b.Property<int?>("Idempresa")
                        .HasColumnName("idempresa")
                        .HasColumnType("int");

                    b.Property<int?>("Idusuario")
                        .HasColumnName("idusuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbGerenciadorCli");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbGerenciadorUsu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("ntext");

                    b.Property<int>("IdGerenciadorUsu")
                        .HasColumnName("idGerenciadorUsu")
                        .HasColumnType("int");

                    b.Property<int?>("Idempresa")
                        .HasColumnName("idempresa")
                        .HasColumnType("int");

                    b.Property<int?>("Idusuario")
                        .HasColumnName("idusuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbGerenciadorUsu");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbNoticias", b =>
                {
                    b.Property<int>("NotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NotComentario")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NotConteudo")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("NotDataCadastro")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("NotFonte")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("NotIdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("NotImagem")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NotResenha")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("NotStatus")
                        .HasColumnType("bit");

                    b.Property<string>("NotTitulo")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("NotVigenciaFim")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("NotVigenciaInicio")
                        .HasColumnType("smalldatetime");

                    b.HasKey("NotId");

                    b.ToTable("TbNoticias");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbNoticiasCategorias", b =>
                {
                    b.Property<int?>("NotIdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeCategoria")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("NotIdCategoria");

                    b.ToTable("TbNoticiasCategorias");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbPesquicaC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataGrava")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnName("idCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdPesquisaP")
                        .HasColumnName("idPesquisaP")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnName("observacao")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.ToTable("tbPesquicaC");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbPesquisaComent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comente")
                        .HasColumnType("ntext");

                    b.Property<int>("IdComent")
                        .HasColumnName("id_Coment")
                        .HasColumnType("int");

                    b.Property<int?>("IdPesquisaEnquete")
                        .HasColumnName("idPesquisaEnquete")
                        .HasColumnType("int");

                    b.Property<int?>("IdPesquisaTipo")
                        .HasColumnName("idPesquisaTipo")
                        .HasColumnType("int");

                    b.Property<int?>("IdPesquisaTitulo")
                        .HasColumnName("idPesquisaTitulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnName("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbPesquisaComent");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbPesquisaP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comente")
                        .HasColumnName("comente")
                        .HasColumnType("ntext");

                    b.Property<int?>("ComenteStatus")
                        .HasColumnName("comenteStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdPesquisaPerg")
                        .HasColumnName("idPesquisaPerg")
                        .HasColumnType("int");

                    b.Property<int?>("IdPesquisaT")
                        .HasColumnName("idPesquisaT")
                        .HasColumnType("int");

                    b.Property<int?>("IdPesquisaTipo")
                        .HasColumnName("idPesquisaTipo")
                        .HasColumnType("int");

                    b.Property<int?>("Idtop")
                        .HasColumnName("idtop")
                        .HasColumnType("int");

                    b.Property<string>("Pesquisatexto")
                        .HasColumnName("pesquisatexto")
                        .HasColumnType("ntext");

                    b.Property<int?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbPesquisaP");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbPesquisaQ", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("IdPesquisaP")
                        .HasColumnName("idPesquisaP")
                        .HasColumnType("int");

                    b.Property<int?>("IdPesquisaT")
                        .HasColumnName("idPesquisaT")
                        .HasColumnType("int");

                    b.Property<int?>("IdPesquisaTipo")
                        .HasColumnName("idPesquisaTipo")
                        .HasColumnType("int");

                    b.Property<int>("Idquestao")
                        .HasColumnName("idquestao")
                        .HasColumnType("int");

                    b.Property<string>("Questao")
                        .HasColumnName("questao")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("Resultado")
                        .HasColumnName("resultado")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id");

                    b.ToTable("tbPesquisaQ");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbPesquisaTipo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("IdNome")
                        .HasColumnName("idNome")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnName("image")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("bit");

                    b.Property<string>("TxtCab")
                        .HasColumnName("txtCab")
                        .HasColumnType("ntext");

                    b.Property<string>("TxtRod")
                        .HasColumnName("txtRod")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.ToTable("tbPesquisaTipo");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbPesquisaTitulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdPesquisaT")
                        .HasColumnName("idPesquisaT")
                        .HasColumnType("int");

                    b.Property<int?>("IdPesquisaTipo")
                        .HasColumnName("idPesquisaTipo")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnName("observacao")
                        .HasColumnType("ntext");

                    b.Property<int?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.ToTable("tbPesquisaTitulo");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbProdutos", b =>
                {
                    b.Property<int>("Produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRODUTO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("STATUS")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Produto");

                    b.ToTable("TB_PRODUTOS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbProdutos1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Arquivo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DtInclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtUltimoDown")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtUpload")
                        .HasColumnType("datetime");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UserUltimoDown")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbProdutos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbProdutosCategorias", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdProdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbProdutosCategorias");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbProdutosCategoriasArquivos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Arquivo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdProdCatArquivo")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Tamanho")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbProdutosCategoriasArquivos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbProdutosPastas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("IdPastaPai")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdProdutoPasta")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TbProdutosPastas");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbSolucao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnName("conteudo")
                        .HasColumnType("ntext");

                    b.Property<string>("ImagePath")
                        .HasColumnName("imagePath")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Menu")
                        .IsRequired()
                        .HasColumnName("menu")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("Parent")
                        .HasColumnName("parent")
                        .HasColumnType("bit");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnName("slug")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("titulo")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("tbsolucao");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbTransferenciaArquivos", b =>
                {
                    b.Property<int>("Transferencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TRANSFERENCIA")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arquivo")
                        .IsRequired()
                        .HasColumnName("ARQUIVO")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasColumnName("ASSUNTO")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Comentarios")
                        .HasColumnName("COMENTARIOS")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("Dataenvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATAENVIO")
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Destinatario")
                        .HasColumnName("DESTINATARIO")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Para")
                        .HasColumnName("PARA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Produto")
                        .HasColumnName("PRODUTO")
                        .HasColumnType("int");

                    b.Property<int?>("Remetente")
                        .HasColumnName("REMETENTE")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("tinyint");

                    b.Property<int?>("idEmpresa")
                        .HasColumnName("idEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("idUsuario")
                        .HasColumnName("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("Transferencia");

                    b.HasIndex("Destinatario");

                    b.HasIndex("Produto");

                    b.HasIndex("Remetente");

                    b.ToTable("TB_TRANSFERENCIA_ARQUIVOS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbUpload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Contador")
                        .HasColumnName("contador")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("ntext");

                    b.Property<int?>("IdPasta")
                        .HasColumnName("idPasta")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubPasta")
                        .HasColumnName("idSubPasta")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnName("idUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("Idempresa")
                        .HasColumnName("idempresa")
                        .HasColumnType("int");

                    b.Property<int>("Idupload")
                        .HasColumnName("idupload")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbUpload");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbUsuarios", b =>
                {
                    b.Property<int>("Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("USUARIO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo")
                        .HasColumnName("CARGO")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cidade")
                        .HasColumnName("CIDADE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ddd")
                        .HasColumnName("DDD")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Empresa")
                        .HasColumnName("EMPRESA")
                        .HasColumnType("int");

                    b.Property<string>("Fone")
                        .HasColumnName("FONE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Login")
                        .HasColumnName("LOGIN")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("Nivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NIVEL")
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("SENHA")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("STATUS")
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Uf")
                        .HasColumnName("UF")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Usuario");

                    b.HasIndex("Empresa");

                    b.ToTable("TB_USUARIOS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbUsuarios1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsAreas")
                        .HasColumnName("usAreas")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UsId")
                        .HasColumnName("usId")
                        .HasColumnType("int");

                    b.Property<string>("UsLogin")
                        .HasColumnName("usLogin")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UsSenha")
                        .HasColumnName("usSenha")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("UsStatus")
                        .HasColumnName("usStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("UsTipo")
                        .HasColumnName("usTipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbUsuarios");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbUsuariosLog", b =>
                {
                    b.Property<int>("Usuario")
                        .HasColumnName("USUARIO")
                        .HasColumnType("int");

                    b.Property<int>("Arquivo")
                        .HasColumnName("ARQUIVO")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .HasColumnName("IP")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("Log")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LOG")
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Usuario", "Arquivo");

                    b.ToTable("TB_USUARIOS_LOG");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbUsuariosProdutos", b =>
                {
                    b.Property<int>("Produto")
                        .HasColumnName("PRODUTO")
                        .HasColumnType("int");

                    b.Property<int>("Usuario")
                        .HasColumnName("USUARIO")
                        .HasColumnType("int");

                    b.HasKey("Produto");

                    b.ToTable("TB_USUARIOS_PRODUTOS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Tokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsRevoked")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_revoked")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('0')");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("token")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique()
                        .HasName("tokens_token_unique")
                        .HasFilter("([token] IS NOT NULL)");

                    b.HasIndex("UserId");

                    b.ToTable("tokens");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.UserDefault", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KeyRef")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KeyValue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserDefault");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("users_email_unique")
                        .HasFilter("([email] IS NOT NULL)");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasName("users_username_unique")
                        .HasFilter("([username] IS NOT NULL)");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnName("UsuarioID")
                        .HasColumnType("int");

                    b.Property<bool?>("Administrador")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.VwArquivos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Downloads")
                        .HasColumnType("int");

                    b.Property<int>("IdArquivo")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("NomeFisico")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NomePasta")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("Tamanho")
                        .HasColumnType("int");

                    b.Property<string>("TipoDescricao")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TipoSigla")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("VwArquivos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.VwProdutos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("QtdeArquivos")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("VwProdutos");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.CurUsuariosLog", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.CurUsuarios", "CurUsuarios")
                        .WithMany()
                        .HasForeignKey("CurUsuariosIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Images", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.Properties", "Property")
                        .WithMany("Images")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("images_property_id_foreign")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Properties", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.Users", "User")
                        .WithMany("Properties")
                        .HasForeignKey("UserId")
                        .HasConstraintName("properties_user_id_foreign")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbArquivos", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.TbCategorias", "CategoriaNavigation")
                        .WithMany("TbArquivos")
                        .HasForeignKey("Categoria")
                        .HasConstraintName("FK_TB_ARQUIVOS_TB_CATEGORIAS")
                        .IsRequired();

                    b.HasOne("WebDatamaceApi.Models.TbProdutos", "ProdutoNavigation")
                        .WithMany("TbArquivos")
                        .HasForeignKey("Produto")
                        .HasConstraintName("FK_TB_ARQUIVOS_TB_PRODUTOS")
                        .IsRequired();
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbEmpresasProdutos", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.TbEmpresas", "EmpresaNavigation")
                        .WithMany("TbEmpresasProdutos")
                        .HasForeignKey("Empresa")
                        .HasConstraintName("FK_TB_EMPRESAS_PRODUTOS_TB_EMPRESAS")
                        .IsRequired();

                    b.HasOne("WebDatamaceApi.Models.TbProdutos", "ProdutoNavigation")
                        .WithMany("TbEmpresasProdutos")
                        .HasForeignKey("Produto")
                        .HasConstraintName("FK_TB_EMPRESAS_PRODUTOS_TB_PRODUTOS")
                        .IsRequired();
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbTransferenciaArquivos", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.TbUsuarios", "DestinatarioNavigation")
                        .WithMany("TbTransferenciaArquivosDestinatarioNavigation")
                        .HasForeignKey("Destinatario")
                        .HasConstraintName("FK_TB_TRANSFERENCIA_ARQUIVOS_TB_USUARIOS1");

                    b.HasOne("WebDatamaceApi.Models.TbProdutos", "ProdutoNavigation")
                        .WithMany("TbTransferenciaArquivos")
                        .HasForeignKey("Produto")
                        .HasConstraintName("FK_TB_TRANSFERENCIA_ARQUIVOS_TB_PRODUTOS");

                    b.HasOne("WebDatamaceApi.Models.TbUsuarios", "RemetenteNavigation")
                        .WithMany("TbTransferenciaArquivosRemetenteNavigation")
                        .HasForeignKey("Remetente")
                        .HasConstraintName("FK_TB_TRANSFERENCIA_ARQUIVOS_TB_USUARIOS");
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbUsuarios", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.TbEmpresas", "EmpresaNavigation")
                        .WithMany("TbUsuarios")
                        .HasForeignKey("Empresa")
                        .HasConstraintName("FK_TB_USUARIOS_TB_EMPRESAS")
                        .IsRequired();
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbUsuariosLog", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.TbUsuarios", "UsuarioNavigation")
                        .WithMany("TbUsuariosLog")
                        .HasForeignKey("Usuario")
                        .HasConstraintName("FK_TB_USUARIOS_LOG_TB_USUARIOS")
                        .IsRequired();
                });

            modelBuilder.Entity("WebDatamaceApi.Models.TbUsuariosProdutos", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.TbProdutos", "ProdutoNavigation")
                        .WithMany("TbUsuariosProdutos")
                        .HasForeignKey("Produto")
                        .HasConstraintName("FK_TB_USUARIOS_PRODUTOS_TB_PRODUTOS")
                        .IsRequired();
                });

            modelBuilder.Entity("WebDatamaceApi.Models.Tokens", b =>
                {
                    b.HasOne("WebDatamaceApi.Models.Users", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .HasConstraintName("tokens_user_id_foreign");
                });
#pragma warning restore 612, 618
        }
    }
}
